(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{Mwo5:function(e,t,a){e.exports=a.p+"static/yogaDiceHomePage-0c14f8b61bc953791e838c0142e226e4.jpg"},ZKRi:function(e,t,a){e.exports=a.p+"static/yogaDiceCreatePose-10cd57880909948f8b8ad9f6960f6dba.jpg"},kJUy:function(e,t,a){"use strict";a.r(t);var n=a("q1tI"),l=a.n(n),o=a("7oih"),r=a("Mwo5"),i=a.n(r),s=a("ZKRi"),c=a.n(s);t.default=function(){return l.a.createElement(o.a,{fullMenu:!0},l.a.createElement("article",{id:"main"},l.a.createElement("header",null,l.a.createElement("h2",null,"Yoga Dice"),l.a.createElement("p",null,"Work In Progress")),l.a.createElement("section",{className:"wrapper style5"},l.a.createElement("div",{className:"inner"},l.a.createElement("h3",null,"Overview"),l.a.createElement("p",null,"Everything began with my passion for yoga and the desire to randomize my practice for the days the inspiration is lower than usual."),l.a.createElement("p",null,"Before starting the bootcamp Grace Hopper (Fullstack Academy) I built a very simple version of this idea only using Vanilla JavaScript. A few weeks into the Grace Hopper program, my desire to rebuild a more elaborate version of the yoga dice app was really high."),l.a.createElement("p",null,"The main goal was building something nice using some technologies I was learning - in this case I wanted to practice React and Redux - but also discovering other technologies that I wouldn't have the opportunity to learn during my time in the bootcamp - Firebase and Firestore."),l.a.createElement("h3",null,"Functionality"),l.a.createElement("p",null,"At the moment the website supports the following functions",l.a.createElement("ul",null,l.a.createElement("li",null,"Local login"),l.a.createElement("li",null,"Display 6 random poses, with a difficulty level filter"),l.a.createElement("li",null,"Create a new pose"),l.a.createElement("li",null,"Edit poses"))),l.a.createElement("div",{className:"row gtr-50 gtr-uniform"},l.a.createElement("div",{className:"col-6"},l.a.createElement("span",{className:"image fit"},l.a.createElement("img",{src:i.a,alt:""}))),l.a.createElement("div",{className:"col-6"},l.a.createElement("span",{className:"image fit"},l.a.createElement("img",{src:c.a,alt:""})))),l.a.createElement("br",null),l.a.createElement("h3",null,"Frontend"),l.a.createElement("p",null,"The frontend is built with React and Redux, although not necessary I wanted to include Redux in order to practice."),l.a.createElement("h3",null,"Backend"),l.a.createElement("p",null,"I am using a backend as a service: Firestore, a noSQL database provided by Google. I really enjoyed the flexibility of this product in comparison to a SQL database. I have three collections, one to store all my poses, one to store the user's information and finally one to store admin."),l.a.createElement("h3",null,"Firestore security rules"),l.a.createElement("p",null,"Security is really important because the client talks directly to the database. Security rules can be directly implemented through Firebase Rules. It is a configuration document that determines what locations have restricted read/write permissions. I have the below security rules. I created an administrator table and only users from this table are able to modify poses. Originally I included admin in the user table but I later realised that anyone using a simple program as Postman could make himself admin so I corrected this. Anyone can create a user (we want people to be able to sign up), only logged in users can read other user's information - this is for future development, e.g. being able to see other users favorite poses."),l.a.createElement("h3",null,"Deployment"),l.a.createElement("p",null,"Originally I wanted to deploy my yoga dice using Heroku but I realised that I could deploy it using Firebase, something I had never done and that I was keen to discover."),l.a.createElement("h3",null,"What would I do differently?"),l.a.createElement("p",null,"There are two main things I would do differently if I restarted this project. The first thing would be to not use Redux. I would explore the new React context API. I understand that it provides a way to pass data through the component tree without having to pass props down manually which would be very handy. The second thing I would do differently is write tests. It is hard to see the value of tests early on, but as I make more changes (and introduce more bugs!) I start to see why they can be so valuable."),l.a.createElement("h3",null,"Future ideas"),l.a.createElement("p",null,"There are a lot of additional features I would love to implement, one of the first one would be to increase the number of choices for the filters - I would like to enable users to select pose types such as core, backbend, balance, etc. Another feature would be to add a practice timer. Users can login but so far there is not much else they can do, I would like to implement a sort of dashboard where they could have access to their favorite poses and set their favorite filters."),l.a.createElement("hr",null),l.a.createElement("h4",null,"Links"),l.a.createElement("p",null,l.a.createElement("a",{href:"https://celinechole.github.io/my-yoga-dice/",target:"blank"},"Live Demo Yoga Dice 1"),"|",l.a.createElement("a",{href:"https://yoga-dice-4c429.firebaseapp.com/#/",target:"blank"},"Live Demo Yoga Dice 2"))))))}}}]);
//# sourceMappingURL=component---src-pages-portfolio-yoga-dice-js-2adedd54ac10cb3bf3c2.js.map